<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://brandstifter.github.io/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 08 Dec 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://brandstifter.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Metric Steiner Tree</title>
      <link>https://brandstifter.github.io/posts/metric-steiner-tree/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://brandstifter.github.io/posts/metric-steiner-tree/</guid>
      
        <description>

&lt;h1 id=&#34;the-metric-steiner-tree&#34;&gt;The Metric Steiner Tree&lt;/h1&gt;

&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;A Steiner Tree is an optimization algorithm for finding a subtree spanning so called terminal vertices.
Terminal vertices are the nodes in a network which must spanned by the MST.
This problems arise in railway networks, telecommunication networks and VSLI chip design.&lt;/p&gt;

&lt;p&gt;This article describes an 2-approximation algorithm for the Metric Steiner Tree Problem.&lt;/p&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;The Steiner Tree Problem (STP) is a graph $G = (V, E)$.
$V$ is splitted into two sets $R$ required terminal vertices and $S$ optional Steiner vertices.
A subgraph of $G$ is a feasible solution if it spans all vertices of $R$.
The objective is to minimize the cost.&lt;/p&gt;

&lt;p&gt;The Metric Steiner Tree Problem (MSTP) is a specialization of the vanilla Steiner Tree $X = R \cup S$ along with a non-negative distance function $d : X \times X \mapsto \mathbb{R}_{\geq 0}$ for edges.
A metric have two properties:
$$
\begin{align}
    \forall x, y \in X &amp;amp;: d(x, y) = d(y, x) \nonumber \newline
    \forall x, y, z \in X &amp;amp;: d(x, y) \leq d(x, z) + d(z, y)  \nonumber
\end{align}
$$&lt;/p&gt;

&lt;p&gt;This gives an undirected graph $G = (V, E)$ with non-negative edge costs.&lt;/p&gt;

&lt;p&gt;Problem: Find a minimal cost tree $T$, which contains all terminal vertives, and possibly some of the optional points, such that the cost
$$
\begin{align}
    C_d (T_m) := \sum_{(u,v) \in E} d(u, v) \nonumber
\end{align}
$$
of the tree is minimized.&lt;/p&gt;

&lt;h3 id=&#34;non-optimal-spanning-trees&#34;&gt;Non-optimal spanning trees&lt;/h3&gt;

&lt;p&gt;Possibility: Find a Minimal Spanning Tree (MST) on the terminal vertices,&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/k4-mst.pdf&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;but this is not optimal!
Next we look for an approximation for the MSTP.&lt;/p&gt;

&lt;h2 id=&#34;towards-an-approximation&#34;&gt;Towards an approximation&lt;/h2&gt;

&lt;p&gt;In this section we show that the approximation bound for MSTP is not greater than for STP.&lt;/p&gt;

&lt;p&gt;Define $G’ = (V, E’$) from $G$ as follows: $G’$ is a complete graph and $e’_{ij}$ is the length of the shortets path in G for vertices $i$ to $j$.
The paths in $G&amp;rsquo;$ cannot be longer than $G$, therefore
$$
\begin{align}
    OPT(G’) \leq OPT(G)
\end{align}
$$&lt;/p&gt;

&lt;p&gt;Assume we have a heuristic $H$ for $G’$.
We get a solution for $G$ by replacing each edge of the MST in $G$ with its corresponding shortest path in $G$. Resolve cycles by removing appropriate edges. Hence
$$
\begin{align}
    C^H(G) \leq C^H(G’)
\end{align}
$$
and therefore by (1) and (2)
$$
\begin{align}
    \frac{C^H(G’)}{OPT(G’)} \leq \alpha  \implies  \frac{C^H(G)}{OPT(G)} \leq \alpha
\end{align}
$$&lt;/p&gt;

&lt;p&gt;Thus, each approximation algorithm for the STP with bound $\alpha$ gives an algorithm with bound $\alpha$ for the MSTP.&lt;/p&gt;

&lt;h2 id=&#34;an-approximation-algorithm&#34;&gt;An approximation algorithm&lt;/h2&gt;

&lt;p&gt;Consider a Steiner Tree with optimal cost $OPT$ for $G’$.&lt;/p&gt;

&lt;p&gt;Find a MST on the termial vertices.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/mst.pdf&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To ensure an even degree of all vertices, we double each edge.
A graph with even degree have an eulerian cycle.
The cost of an eulerian cycle equals $2 \cdot OPT$ by edge double.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/double-the-edges.pdf&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Construct a hamiltonian cycle by short cutting steiner vertices previously visited.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/mst-st.pdf&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To get a hamiltonian path remove one edge of the cycle.
We have found an MST on the terminal vertices.&lt;/p&gt;

&lt;p&gt;A hamiltonian path does not increase the cost, because of the triangle inequality and removing edges.
The resulting MST on the terminal vertices cost $\leq 2 \cdot OPT$ and the bound is tight.&lt;/p&gt;

&lt;p&gt;Special thanks to Prof. Hans Kellerer (University of Graz) for teaching.&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>